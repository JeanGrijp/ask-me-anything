// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package pgstore

import (
	"net/netip"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Message struct {
	ID            uuid.UUID `db:"id" json:"id"`
	RoomID        uuid.UUID `db:"room_id" json:"room_id"`
	Message       string    `db:"message" json:"message"`
	ReactionCount int64     `db:"reaction_count" json:"reaction_count"`
	Answered      bool      `db:"answered" json:"answered"`
}

type Room struct {
	ID    uuid.UUID `db:"id" json:"id"`
	Theme string    `db:"theme" json:"theme"`
}

type RoomCreator struct {
	RoomID           uuid.UUID        `db:"room_id" json:"room_id"`
	CreatorSessionID uuid.UUID        `db:"creator_session_id" json:"creator_session_id"`
	CreatedAt        pgtype.Timestamp `db:"created_at" json:"created_at"`
}

type UserReaction struct {
	ID           uuid.UUID        `db:"id" json:"id"`
	SessionID    uuid.UUID        `db:"session_id" json:"session_id"`
	RoomID       uuid.UUID        `db:"room_id" json:"room_id"`
	MessageID    uuid.UUID        `db:"message_id" json:"message_id"`
	ReactionType string           `db:"reaction_type" json:"reaction_type"`
	CreatedAt    pgtype.Timestamp `db:"created_at" json:"created_at"`
}

type UserSession struct {
	ID           uuid.UUID        `db:"id" json:"id"`
	SessionToken string           `db:"session_token" json:"session_token"`
	CreatedAt    pgtype.Timestamp `db:"created_at" json:"created_at"`
	ExpiresAt    pgtype.Timestamp `db:"expires_at" json:"expires_at"`
	LastActivity pgtype.Timestamp `db:"last_activity" json:"last_activity"`
	Username     pgtype.Text      `db:"username" json:"username"`
	Email        pgtype.Text      `db:"email" json:"email"`
	UserAgent    pgtype.Text      `db:"user_agent" json:"user_agent"`
	IpAddress    *netip.Addr      `db:"ip_address" json:"ip_address"`
}
