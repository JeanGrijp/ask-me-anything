// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"context"
)

type Querier interface {
	CreateAnswer(ctx context.Context, arg CreateAnswerParams) (Answer, error)
	CreateMagicLink(ctx context.Context, arg CreateMagicLinkParams) (MagicLink, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateRoom(ctx context.Context, arg CreateRoomParams) (Room, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DecrementQuestionLikes(ctx context.Context, id int32) error
	DeleteAnswer(ctx context.Context, id int32) error
	DeleteExpiredMagicLinks(ctx context.Context) error
	DeleteQuestion(ctx context.Context, id int32) error
	DeleteRoom(ctx context.Context, id int32) error
	DeleteUser(ctx context.Context, id int32) error
	// Answers queries aligned with Answer model
	GetAnswer(ctx context.Context, id int32) (Answer, error)
	GetMagicLink(ctx context.Context, token string) (MagicLink, error)
	GetMagicLinkByEmail(ctx context.Context, email string) ([]MagicLink, error)
	// Questions queries aligned with Question model
	GetQuestion(ctx context.Context, id int32) (Question, error)
	// Room queries to match Room model
	GetRoom(ctx context.Context, id int32) (Room, error)
	// Updated users queries to match User model
	GetUser(ctx context.Context, id int32) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	IncrementQuestionLikes(ctx context.Context, id int32) error
	ListAnsweredQuestions(ctx context.Context, arg ListAnsweredQuestionsParams) ([]Question, error)
	ListAnswersByQuestion(ctx context.Context, questionID int32) ([]Answer, error)
	ListAnswersByUser(ctx context.Context, userID int32) ([]Answer, error)
	ListQuestions(ctx context.Context, arg ListQuestionsParams) ([]Question, error)
	ListQuestionsByUser(ctx context.Context, userID int32) ([]Question, error)
	ListRooms(ctx context.Context) ([]Room, error)
	ListRoomsByOwner(ctx context.Context, ownerID int32) ([]Room, error)
	ListUnansweredQuestions(ctx context.Context, arg ListUnansweredQuestionsParams) ([]Question, error)
	ListUsers(ctx context.Context) ([]User, error)
	MarkQuestionAsAnswered(ctx context.Context, id int32) error
	MarkQuestionAsUnanswered(ctx context.Context, id int32) error
	UpdateAnswer(ctx context.Context, arg UpdateAnswerParams) (Answer, error)
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) (Question, error)
	UpdateRoom(ctx context.Context, arg UpdateRoomParams) (Room, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UseMagicLink(ctx context.Context, token string) error
}

var _ Querier = (*Queries)(nil)
